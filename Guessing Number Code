import random
import os

# Function to get player's name and store it
def getPlayerName():
    playerName = input("Enter your name: ").strip()

    # Save player's name to a file
    with open("players.txt", "a") as file:
        file.write(playerName + "\n")

    return playerName

# Function to play the game
def playGame(playerName):
    guessNumber = random.randint(1, 100)
    guessCount = 0

    print("\nWelcome to the Number Guessing Game!")
    playerInput = input("Press Enter to start... (L) if you want to go to leaderboard: ").strip()

    if playerInput.lower() == "l":
        displayLeaderboard()  # Show the leaderboard and return to game
        return  # Return without playing the game

    while True:
        userInput = input("Enter a number from 1-100: ")

        # Ensure input is a valid integer
        if userInput.isdigit():
            userInput = int(userInput)   
        else:
            print("Invalid input! Please enter a number between 1 and 100.")
            continue  # Restart the loop if input is not a number

        if 1 <= userInput <= 100:
            guessCount += 1  # Increment guess count

            if userInput > guessNumber:
                print("Your number is too high")
            elif userInput < guessNumber:
                print("Your number is too low")
            else:
                print(f"Congratulations, {playerName}! You guessed the number in {guessCount} tries.")
                
                # Save player score to leaderboard
                saveScore(playerName, guessCount)
                break
        else:
            print("Out of range! Please enter a number between 1 and 100.")

# Function to save score to a file
def saveScore(playerName, score):
    scores = {}

    # Check if the scoreboard file exists
    if os.path.exists("scoreboard.txt"):
        # Read existing scores
        with open("scoreboard.txt", "r") as file:
            for line in file:
                name, scoreValue = line.strip().split(": ")
                scores[name] = int(scoreValue)

    # Update only if the new score is better
    if playerName not in scores or score < scores[playerName]:
        scores[playerName] = score

    # Sort scores from least to most guesses using a lambda function
    sortedScores = sorted(scores.items(), key=lambda item: item[1])

    # Write the sorted leaderboard back to the file
    with open("scoreboard.txt", "w") as file:
        for name, scoreValue in sortedScores:
            file.write(f"{name}: {scoreValue}\n")

# Function to display the leaderboard
def displayLeaderboard():
    print("\n--- LEADERBOARD ---")
    if os.path.exists("scoreboard.txt"):
        try:
            with open("scoreboard.txt", "r") as file:
                scores = file.readlines()
                if scores:
                    for score in scores:
                        print(score.strip())
                else:
                    print("No scores recorded yet.")
        except FileNotFoundError:
            print("No scores recorded yet.")
    else:
        print("No scores recorded yet.")


while True:
    playerName = getPlayerName()
    playGame(playerName)
    
    playAgain = input("Do you want to play again? (y/n): ").strip().lower()
    if playAgain != 'y':
        print("Thank you for playing!")
        displayLeaderboard()  # Show final leaderboard
        break
